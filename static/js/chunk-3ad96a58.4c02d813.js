(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3ad96a58"],{"556c":function(t,e,n){"use strict";n.r(e);var s=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content",class:{contentTheme:t.theme}},[n("div",{staticClass:"synopsis"},[t._v("简介")]),n("div",{staticClass:"synopsisBox"},[t._v(" Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式 + 库。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。 ")]),n("div",{staticClass:"br"}),n("h3",{staticStyle:{margin:"20px 0"}},[t._v("1. 下包")]),t._m(0),n("h3",{staticStyle:{margin:"20px 0"}},[t._v("2. main.js配置")]),t._m(1),n("h3",{staticStyle:{margin:"20px 0"}},[t._v("3. 创建 store / index.js")]),t._m(2),n("h3",{staticStyle:{margin:"20px 0"}},[t._v("4. vue中使用")]),t._m(3),n("h3",{staticStyle:{margin:"20px 0"}},[t._v("5. 获取vuex容器里的值")]),t._m(4),n("h3",{staticStyle:{margin:"20px 0"}},[t._v("6. 获取vuex容器里的geeters")]),t._m(5)])},a=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("pre",{staticClass:"pre"},[t._v("    "),n("code",{staticClass:"code"},[t._v("\n      npm install vuex@next\n    ")]),t._v("\n  ")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("pre",{staticClass:"pre"},[t._v("    "),n("code",{staticClass:"code"},[t._v("\n      import store from './store/index.js'\n\n      const app = new Vue({\n        ...App,\n        store\n      })\n    ")]),t._v("\n  ")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("pre",{staticClass:"pre"},[t._v("    "),n("code",{staticClass:"code"},[t._v("\n      import Vue from 'vue'\n      import Vuex from 'vuex'\n      Vue.use(Vuex)\n      // store  仓库\n      export default new Vuex.Store({\n        // state 就是容器  数据保存的位置\n        state: {\n          user: ''  // 变量名 储存用\n      },\n      // mutations 是方法的集合 修改数据的唯一方式 必须是同步的\n      mutations: {\n        // setUser 函数名 可自定义\n        setUser (state, user) {//第一个是固定写法 第二个形参\n          state.user = user // 容器里的变量 形参通过调用传入\n        }\n      },\n      // 处理异步操作的地方\n      actions: {\n        // 函数 自定义\n        login(context,payload){//第一个是固定写法 第二个形参\n        }\n      },\n      // 模块  可以将容器里的变量模块单独封装 引入到这里\n      modules: {\n      },\n      getters {\n        user: state => state.user\n      },\n    })\n    ")]),t._v("\n  ")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("pre",{staticClass:"pre"},[t._v("    "),n("code",{staticClass:"code"},[t._v("\n      // 触发mutations里的函数\n      this.$store.commit('自定义函数名', 实参)\n\n      // 触发actions 里的函数\n      this.$store.dispatch('自定义函数名',实参)\n    ")]),t._v("\n  ")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("pre",{staticClass:"pre"},[t._v("    "),n("code",{staticClass:"code"},[t._v("\n      import { mapState } from 'vuex';\n\n      computed: {\n        ...mapState(['user'])\n        // 相当于把vuex里的user变量放到当前页面的data()里 是一个对象\n        // 相当于全局变量  在事件函数里用this.user可以读取\n      },\n      mounted() {  // 生命周期函数自执行  打印测试一下\n        console.log(this.user);  // 用this.可以读取\n      }\n    ")]),t._v("\n  ")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("pre",{staticClass:"pre"},[t._v("    "),n("code",{staticClass:"code"},[t._v("\n      import { mapGetters } from 'vuex'  // 引入\n\n      computed: { // 计算属性里\n        ...mapGetters([ // 对应getters里映射出的名字\n          'sidebar'\n        ])\n      }\n      mounted() {  // 生命周期函数自执行  打印测试一下\n        console.log(this.user);  // 用this.可以读取\n      }\n    ")]),t._v("\n  ")])}],r=n("5530"),c=n("2f62"),i={components:{},data:function(){return{}},computed:Object(r["a"])({},Object(c["b"])(["theme"])),created:function(){},mounted:function(){},methods:{}},o=i,u=(n("cbfe"),n("2877")),l=Object(u["a"])(o,s,a,!1,null,"574e6c65",null);e["default"]=l.exports},"93bb":function(t,e,n){},cbfe:function(t,e,n){"use strict";n("93bb")}}]);