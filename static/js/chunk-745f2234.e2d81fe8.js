(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-745f2234"],{"0115":function(n,t,r){"use strict";r("36c2")},"33b2":function(n,t,r){"use strict";r.r(t);var e=function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("div",{staticClass:"content",class:{contentTheme:n.theme}},[r("div",{staticClass:"synopsis"},[n._v("简介")]),r("div",{staticClass:"synopsisBox"},[n._v(" 通过对待排序数据从前往后【从下标较小的元素开始】，依次比较相邻元素的值，假设要求数据按照升序排列，若发现前一个数据大于后一个，则将它们交换位置，使较大的元素逐渐从前向后移，就想水中的气泡一样逐渐向上冒。 ")]),r("div",{staticClass:"br"}),n._m(0)])},s=[function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("pre",{staticClass:"pre"},[n._v("    "),r("code",{staticClass:"code"},[n._v("\n    // 函数封装\n    function sort(arr) {\n      var kong = 0\n      for (var i = 0; i < arr.length; i++) {\n        for (var y = 0; y < arr.length; y++) {\n          if (arr[y] > arr[y + 1]) {\n            kong = arr[y];\n            arr[y] = arr[y + 1];\n            arr[y + 1] = kong;\n          }\n        }\n      }\n      return arr;\n    }\n    // 使用方法\n    sort([4, 7, 5, 3, 9, 8, 6, 1, 2])\n    ")]),n._v("\n  ")])}],a=r("5530"),c=r("2f62"),o={components:{},data:function(){return{}},computed:Object(a["a"])({},Object(c["b"])(["theme"])),created:function(){},mounted:function(){},methods:{}},i=o,u=(r("0115"),r("2877")),l=Object(u["a"])(i,e,s,!1,null,"a2cb55c6",null);t["default"]=l.exports},"36c2":function(n,t,r){}}]);