(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5f9db202"],{"8fde":function(n,t,o){},"9bb0":function(n,t,o){"use strict";o.r(t);var e=function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("div",{staticClass:"content",class:{contentTheme:n.theme}},[o("div",{staticClass:"synopsis"},[n._v("简介")]),o("div",{staticClass:"synopsisBox"},[n._v(" 对象方法 ")]),o("div",{staticClass:"br"}),o("h3",{staticStyle:{margin:"20px 0"}},[n._v("1. 对象方法")]),n._m(0)])},c=[function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("pre",{staticClass:"pre"},[n._v("    "),o("code",{staticClass:"code"},[n._v("\n      /*  in 检测某个属性是否属于这个对象  */\n      console.log('age' in obj);\n\n      /*  instanceof  检测是否为对象  */\n      console.log(obj instanceof Object)\n\n      /*  constructor  检测是否为对象  */\n      console.log(obj.constructor);\n\n      /*  Object.prototype.toString.call  检测是否为对象  */\n      console.log(Object.prototype.toString.call(obj));\n\n      /*  遍历对象  */\n      for (var k in obj) {\n        console.log(k);      // 这里的 k 是属性名\n        console.log(obj[k]); // 这里的 obj[k] 是属性值\n      }\n\n      /*  遍历对象里的key 返回一个数组  */\n      var arr =  Object.keys(obj)\n\n      /*  遍历对象里的value 返回一个数组  */\n      var arr =  Object.values(obj)\n\n      /*  JSON 和 JS对象的相互转换  */\n      JSON.parse() JSON字符串转对象\n      JSON.stringify() JSON对象转JSON字符串\n    ")]),n._v("\n  ")])}],s=o("5530"),a=o("2f62"),r={components:{},data:function(){return{}},computed:Object(s["a"])({},Object(a["b"])(["theme"])),created:function(){},mounted:function(){},methods:{}},i=r,l=(o("ca15"),o("2877")),b=Object(l["a"])(i,e,c,!1,null,"6528a86c",null);t["default"]=b.exports},ca15:function(n,t,o){"use strict";o("8fde")}}]);