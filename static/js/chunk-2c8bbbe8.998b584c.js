(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2c8bbbe8"],{"0fb5":function(e,n,t){"use strict";t("e1dc")},5976:function(e,n,t){"use strict";t.r(n);var s=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"content",class:{contentTheme:e.theme}},[t("div",{staticClass:"synopsis"},[e._v("简介")]),t("div",{staticClass:"synopsisBox"},[e._v(" Axios 是一个 基于 promise 的 HTTP 客户端，适用于 node.js 和浏览器。它是 同构的（即它可以使用同一套代码运行在浏览器和 nodejs 中）。在服务器端它使用原生的 node.js http 模块，在客户端（浏览器）它使用 XMLHttpRequests。 ")]),t("div",{staticClass:"br"}),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("1. 下包")]),e._m(0),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("2. 创建 utils / request.js")]),e._m(1),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("3. 创建 api / index.js")]),e._m(2),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("4. 跨域配置 src 平级 vue.config.js 中")]),e._m(3)])},r=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      npm install axios\n    ")]),e._v("\n  ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      import axios from 'axios'\n      import { Message } from 'element-ui'\n      import store from '@/store'\n      import router from '@/router'\n\n      const service = axios.create({\n        baseURL: process.env.VUE_APP_BASE_API, // 接口根地址\n        timeout: 5000 // request timeout\n      })\n\n      // 请求拦截器\n      service.interceptors.request.use((config) => {\n        // 请求时携带token\n        if (store.getters.token) {\n          config.headers.Authorization = `Bearer ${store.getters.token}`\n        }\n        return config\n      })\n\n      // 添加响应拦截器\n      service.interceptors.response.use(function(response) {\n        // 对响应数据做点什么\n        return response\n      }, function(error) {\n        // 对响应错误做点什么   处理token超时\n        if (error.response && error.response.status === 401 && error.response.data.code === 10002) {\n          // 当等于10002的时候 表示 后端告诉我token超时了\n          // store.dispatch('user/logout') // 退出登录 删除token\n          router.push('/login') // 跳转到登录页\n          Message('登录过期,请重新登录') // 提示消息\n        } else {\n          Message.error(error.message) // 提示错误信息\n        }\n        return Promise.reject(error)\n      })\n\n      export default service\n    ")]),e._v("\n  ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      import axios from '@/utils/request';\n\n      // POST\n      export const login = data =>\n        axios({\n          method: 'POST',\n          url: '/sys/login',\n          data: data\n        })\n\n      // GET\n      export const getUser = (id) =>\n        axios({\n          url: `/employees/${id}/personalInfo`,\n          params: {\n            id\n          }\n        })\n    ")]),e._v("\n  ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      devServer: {\n        // 配置反向代理\n        proxy: {\n          // 当地址中有/api的时候会触发代理机制\n          '/api': {\n            target: 'http://ihrm.itheima.net/', // 要转发到的地址 这里不用带api\n            changeOrigin: true, // 是否跨域\n            pathRewrite: {\n            // 路径重写，\n            '^/api': '' // 替换target中的请求地址，也就是说以后你在请求地址的时候直接写成/api即可。\n            }\n          }\n        }\n      }\n    ")]),e._v("\n  ")])}],o=t("5530"),i=t("2f62"),a={components:{},data:function(){return{}},computed:Object(o["a"])({},Object(i["b"])(["theme"])),created:function(){},mounted:function(){},methods:{}},c=a,p=(t("0fb5"),t("2877")),u=Object(p["a"])(c,s,r,!1,null,"f24130a0",null);n["default"]=u.exports},e1dc:function(e,n,t){}}]);