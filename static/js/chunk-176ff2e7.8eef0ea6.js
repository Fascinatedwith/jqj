(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-176ff2e7"],{"4ccd":function(n,e,t){},a167:function(n,e,t){"use strict";t("4ccd")},db47:function(n,e,t){"use strict";t.r(e);var o=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"content",class:{contentTheme:n.theme}},[t("div",{staticClass:"synopsis"},[n._v("简介")]),t("div",{staticClass:"synopsisBox"},[n._v(" 原生javascript的操作 ")]),t("div",{staticClass:"br"}),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("1. DOM操作之获取元素")]),n._m(0),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("1. DOM操作之操作元素")]),n._m(1),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("2. 传统的鼠标事件")]),n._m(2),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("3. 监听式鼠标事件")]),n._m(3),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("4. 传统的键盘事件")]),n._m(4),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("5. 监听式键盘事件")]),n._m(5),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("6. 事件解绑")]),n._m(6),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("7. 事件委托")]),n._m(7),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("8. 事件对象 e")]),n._m(8),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("9. 鼠标事件对象")]),n._m(9),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("10. 键盘事件对象")]),n._m(10),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("11. 窗口事件")]),n._m(11),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("12. 元素偏移量 offset 系列")]),n._m(12),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("13. 元素可视区 client 系列")]),n._m(13),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("14. 元素滚动 scroll 系列")]),n._m(14),t("h3",{staticStyle:{margin:"20px 0"}},[n._v("15. 自执行函数")]),n._m(15)])},c=[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 根据ID获取 */\n      document.getElementById(\"id\")   /* 返回值：元素对象 或 null */\n\n      /* 根据标签名获取 */\n      document.getElementsByTagName('标签名')   /* 返回值：元素对象集合（伪数组） */\n\n      /* 根据类名获取 */\n      document.getElementsByClassName('类名')   /* 返回值：元素对象集合（伪数组） */\n\n      /* 根据指定选择器获取单个元素 (如果重复，只获取第一个) */\n      document.querySelector('.类名 或 标签名 或 #id')   /* 返回值：元素对象 或 null */\n\n      /* 根据指定选择器获取全部元素 */\n      document.querySelectorAll('.类名 或 标签名')   /* 返回值：元素对象集合（伪数组） */\n\n      /* 获取 body */\n      document.body\n\n      /* 获取 html */\n      document.documentElement\n\n      /* 通过子元素获取父元素 */\n      document.querySelector('子元素').parentNode   /* 返回值：元素对象 或 null */\n\n      /* 通过父元素获取子元素 */\n      document.querySelector('父元素').children   /* 返回值：元素对象集合（伪数组） */\n\n      /* 通过元素获取下一个兄弟元素 */\n      document.querySelector('元素').nextSibling    /* 下一个兄弟节点 包含元素 文字节点 */\n      document.querySelector('元素').nextElementSibling    /* 下一个兄弟元素节点 */\n\n      /* 通过元素获取上一个兄弟元素 */\n      document.querySelector('元素').previousSibling    /* 上一个兄弟节点 包含元素 文字节点 */\n      document.querySelector('元素').previousElementSibling   /* 上一个兄弟元素节点 */\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v('\n      /* 改变元素内容 */\n      元素.innerHTML = ""\n      元素.innerText = ""\n\n      /* 改变元素类名 */\n      元素.className = ""\n\n      /* 改变元素样式 */\n      元素.style.样式名 = ""\n\n      /* 改变img图片 */\n      元素.src = ""\n      元素.title = ""\n      元素.alt = ""\n\n      /* 增加类名 */\n      元素.className = "旧类名 新类名"\n\n      /* 音视频加载播放暂停 */\n      元素.load    /* 音视频加载 */\n      元素.play()   /* 音视频播放 */\n      元素.pause()  /* 音视频暂停 */\n\n      /* 增加元素的自定义属性 */\n      元素.setAttribute(\'属性名\',属性值)\n\n      /* 获取元素的自定义属性 */\n      元素.getAttribute(\'属性名\')\n\n      /* 创建元素 两种方法 */\n      var 元素名 = document.createElement(\'标签名\')\n      元素.innerHTML = "'),t("code",[n._v("<")]),n._v('a href="#">'),t("code",[n._v("<")]),n._v("/a>\"\n\n      /* 插入元素到第几位 */\n      添加到的元素.insertBefore(创建标签的元素名, 添加到谁的名.children[索引号])\n      var lili = document.createElement('li')   // 1. 创建元素\n      ul.insertBefore(lili,ul.children[索引号])  // 1. 将元素添加到ul里第几位\n\n      /* 插入元素到最后一位 */\n      添加到谁的名.appendChild(创建标签的元素名)\n      var lili = document.createElement('li')   // 1. 创建元素\n      ul.appendChild(lili)  // 1. 将元素添加到ul里最后\n\n      /* 插入元素 */\n      var li = document.createElement('li')   // 1. 创建元素\n      ul.insertAdjacentHTML('beforebegin', li);  // 插入到ul自身的前一位\n      ul.insertAdjacentHTML('afterbegin', li);  // 插入到ul里的第一位，不会替换掉原第一个元素\n      ul.insertAdjacentHTML('beforeend', li);  // 插入到ul里的最后一位，不会替换掉原最后一个元素\n      ul.insertAdjacentHTML('afterend', li);  // 插入到ul自身的后一位\n\n      /* 删除某个元素 */\n      ul.removeChild(ul.children[0])  // 删除ul里的第一个孩子\n\n      /* 删除所有元素 */\n      ul.remove()\n\n      /* 删除所有元素 */\n      ul.remove()\n\n      /* 复制元素 */\n      var lili = ul.children[0].cloneNode(true)   //复制ul里的第一个\n      * 括号为空或者里面是false 浅拷贝 只复制标签不复制里面的内容\n      * 括号为true 深拷贝 复制标签并复制里面的内容\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 先获取到元素 */\n\n      /* 获得焦点事件 onfocus */\n      元素.onfocus = function() { }\n\n      /* 失去焦点事件 onblur */\n      元素.onblur = function() { }\n\n      /* 鼠标点击事件 onclick */\n      元素.onclick = function() { }\n\n      /* 鼠标双击事件 ondblclick */\n      元素.ondblclick = function() { }\n\n      /* 鼠标移动事件 onmousemove */\n      元素.onmousemove = function() { }\n\n      /* 鼠标弹起事件 onmouseup  */\n      元素.onmouseup  = function() { }\n\n      /* 鼠标按下事件 onmousedown  */\n      元素.onmousedown  = function() { }\n\n      /* 鼠标经过事件 onmouseover 会有事件冒泡  */\n      元素.onmouseover  = function() { }\n\n      /* 鼠标经过事件 onmouseenter 没有事件冒泡  */\n      元素.onmouseenter  = function() { }\n\n      /* 鼠标离开事件 onmouseout 会有事件冒泡 */\n      元素.onmouseout  = function() { }\n\n      /* 鼠标离开事件 onmouseleave 没有事件冒泡  */\n      元素.onmouseleave  = function() { }\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 先获取到元素 */\n\n      /* 获得焦点事件 focus */\n      元素.addEventListener('focus', function (){ })\n\n      /* 失去焦点事件 blur */\n      元素.addEventListener('blur', function (){ })\n\n      /* 鼠标点击事件 click */\n      元素.addEventListener('click', function (){ })\n\n      /* 鼠标双击事件 dblclick */\n      元素.addEventListener('dblclick', function (){ })\n\n      /* 鼠标移动事件 mousemove */\n      元素.addEventListener('mousemove', function (){ })\n\n      /* 鼠标弹起事件 mouseup  */\n      元素.addEventListener('mouseup', function (){ })\n\n      /* 鼠标按下事件 mousedown  */\n      元素.addEventListener('mousedown', function (){ })\n\n      /* 鼠标经过事件 mouseover 会有事件冒泡  */\n      元素.addEventListener('mouseover', function (){ })\n\n      /* 鼠标经过事件 mouseenter 没有事件冒泡  */\n      元素.addEventListener('mouseenter', function (){ })\n\n      /* 鼠标离开事件 mouseout 会有事件冒泡 */\n      元素.addEventListener('mouseout', function (){ })\n\n      /* 鼠标离开事件 mouseleave 没有事件冒泡  */\n      元素.addEventListener('mouseleave', function (){ })\n\n      /* 禁用右键菜单 contextmenu  */\n      元素.addEventListener('contextmenu', function (e){ e.preventDefault() })\n\n      /* 禁止选中文字 selectstart  */\n      元素.addEventListener('selectstart', function (e){ e.preventDefault() })\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 先获取到元素 一般给body绑定事件 */\n\n      /* 按键弹起的时候触发 onkeyup */\n      document.onkeyup = function() { }\n\n      /* 按键按下的时候触发 onkeydown */\n      document.onkeydown = function() { }\n\n      /* 按键按下的时候触发 onkeypress  *不能识别功能键 比如 ctrl shift 左右箭头 */\n      document.onkeypress = function() { }\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 先获取到元素 一般给body绑定事件 */\n\n      /* 按键弹起的时候触发 keyup */\n      document.addEventListener('keyup', function (){ })\n\n      /* 按键按下的时候触发 keydown */\n      document.addEventListener('keydown', function (){ })\n\n      /* 按键按下的时候触发 keypress  *不能识别功能键 比如 ctrl shift 左右箭头 */\n      document.addEventListener('keypress', function (){ })\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 先获取到元素 */\n\n      /* 传统事件解绑 */\n      元素.事件 = null\n\n      /* 监听式事件解绑  只有将事件执行函数分开写的时候才能解绑事件 */\n      元素.removeEventListener('事件', 函数名);\n\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 先获取元素 */\n\n      /* 事件委托 */\n      元素.on('click', function () { })\n\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      元素.onclick = function(e) {\n        console.log(e);          /* 事件对象 */\n        console.log(e.target);   /* 谁触发的这个事件 */\n        console.log(e.target.nodeName);   /* 触发这个事件的标签字母 大写 */\n        console.log(e.type);   /* 事件类型 */\n        e.preventDefault()   /* 阻止默认行为 */\n        e.stopPropagation()  /* 阻止冒泡 */\n      }\n\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n        document.addEventListener('click', function(e) {\n          // 1. client 鼠标在可视区的x和y坐标\n          console.log(e.clientX);\n          console.log(e.clientY);\n          console.log('---------------------');\n\n          // 2. page 鼠标在页面文档的x和y坐标\n          console.log(e.pageX);\n          console.log(e.pageY);\n          console.log('---------------------');\n\n          // 3. screen 鼠标在电脑屏幕的x和y坐标\n          console.log(e.screenX);\n          console.log(e.screenY);\n        })\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      document.addEventListener('keyup', function(e) {\n          console.log(e.key)  // 用户按下哪个键\n          console.log(e.keyCode) // keycode返回的ASCII码值来判断用户按下了那个键\n      })\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 窗口加载事件 */\n      window.onload = function(){ }\n\n      /* 窗口加载事件 仅当DOM加载完成，不包括样式表，图片，flash等等。就可以触发 */\n      document.addEventListener('DOMContentLoaded', function() { })\n\n      /* 调整窗口大小事件 */\n      window.onresize = function(){ }\n\n      /* 当前屏幕的宽度 */\n      var w = window.innerWidth\n\n      /* 当前屏幕的宽度 */\n      var w = window.innerWidth\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 返回元素相对带有定位的父盒子上方的距离 */\n      var p = 元素.offsetTop\n\n      /* 返回元素相对带有定位的父盒子左侧的距离 */\n      var p = 元素.offsetLeft\n\n      /* 返回元素的宽度 *包含边框宽度和内边距 */\n      var p = 元素.offsetWidth\n\n      /* 返回元素的高度 *包含边框宽度和内边距 */\n      var p = 元素.offsetHeight\n\n      /* 返回元素的带有定位的父亲 否则返回的是body */\n      var p = 元素.offsetParent\n\n      /* 返回父亲 是最近一级的父亲 不管有没有定位 */\n      var p = 元素.parentNode\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 返回元素的宽度 *包含内边距 *但不包含边框 */\n      var p = 元素.clientWidth\n\n      /* 返回元素的高度 *包含内边距 *但不包含边框 */\n      var p = 元素.clientHeight\n\n      /* 返回上边框的宽度 */\n      var p = 元素.clientTop\n\n      /* 返回左边框的宽度 */\n      var p = 元素.clientLeft\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      /* 返回元素实际的高度 *包含内边距 *但不包含边框 */\n      var p = 元素.scrollHeight\n\n      /* 返回元素实际的宽度 *包含内边距 *但不包含边框 */\n      var p = 元素.scrollWidth\n\n      /* 返回盒子被卷去的上侧距离 */\n      var p = 元素.scrolltop\n\n      /* 返回盒子被卷去的左侧距离 */\n      var p = 元素.scrollLeft\n\n      /* 返回页面被卷去的上侧距离 */\n      var p = window.pageYOffset\n\n      /* 返回页面被卷去的左侧距离 */\n      var p = window.pageXOffset\n    ")]),n._v("\n  ")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("pre",{staticClass:"pre"},[n._v("    "),t("code",{staticClass:"code"},[n._v("\n      (function(){ })();\n\n      (function a (){ }())\n    ")]),n._v("\n  ")])}],s=t("5530"),i=t("2f62"),r={components:{},data:function(){return{}},computed:Object(s["a"])({},Object(i["b"])(["theme"])),created:function(){},mounted:function(){},methods:{}},l=r,a=(t("a167"),t("2877")),u=Object(a["a"])(l,o,c,!1,null,"38f28cad",null);e["default"]=u.exports}}]);