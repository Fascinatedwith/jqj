(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5c43d54e"],{"0788":function(e,t,n){},"91a1":function(e,t,n){"use strict";n.r(t);var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content",class:{contentTheme:e.theme}},[n("div",{staticClass:"synopsis"},[e._v("简介")]),n("div",{staticClass:"synopsisBox"},[e._v(" 基于el-tree进行的二次封装，原版取消某个子级的选中时会导致父级半选中状态，这样是拿不到父级id的。 此组件实现点击父级全选子级，取消某个子级后，父级不会取消。 ")]),n("div",{staticClass:"br"}),e._m(0)])},c=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",{staticClass:"pre"},[e._v("    "),n("code",{staticClass:"code"},[e._v("\n      // .vue2文件 可直接复制\n\n      "),n("code",[e._v("<")]),e._v("template>\n        "),n("code",[e._v("<")]),e._v('el-tree\n          ref="tree"\n          :data="Data"\n          show-checkbox\n          :default-checked-keys="ids"\n          node-key="id"\n          highlight-current\n          :props="defaultProps"\n          :check-strictly="true"\n          @check="nodeClick"\n        />\n      '),n("code",[e._v("<")]),e._v("/template>\n      "),n("code",[e._v("<")]),e._v("script>\n      export default {\n        data() {\n          return {\n            Data: [],\n            ids: [],\n          };\n        },\n        methods: {\n          // 实现权限向下级联\n          nodeClick(currentObj, treeStatus) {\n            // 用于：父子节点严格互不关联时，父节点勾选变化时通知子节点同步变化，实现单向关联。\n            let selected = treeStatus.checkedKeys.indexOf(currentObj.id); // -1未选中,>=0为选中\n            // 选中\n            if (selected !== -1) {\n              // 子节点只要被选中父节点就被选中(需要选中父节点时候调用此方法)\n              this.selectedParent(currentObj);\n              // 统一处理子节点为相同的勾选状态\n              this.uniteChildSame(currentObj, true);\n            } else {\n              // 未选中 处理子节点全部未选中\n              if (currentObj.children && currentObj.children.length !== 0) {\n                this.uniteChildSame(currentObj, false);\n              }\n            }\n          },\n          // 统一处理子节点为相同的勾选状态\n          uniteChildSame(treeList, isSelected) {\n            this.$refs.tree.setChecked(treeList.id, isSelected);\n            if (treeList.children) {\n              for (let i = 0; i < treeList.children.length; i++) {\n                this.uniteChildSame(treeList.children[i], isSelected);\n              }\n            }\n          },\n          // 统一处理父节点为选中\n          selectedParent(currentObj) {\n            let currentNode = this.$refs.tree.getNode(currentObj);\n            if (currentNode.parent.key !== undefined) {\n              this.$refs.tree.setChecked(currentNode.parent, true);\n              this.selectedParent(currentNode.parent);\n            }\n          },\n        },\n      }\n      "),n("code",[e._v("<")]),e._v("/script>\n    ")]),e._v("\n  ")])}],s=n("5530"),i=n("2f62"),d={components:{},data:function(){return{}},computed:Object(s["a"])({},Object(i["b"])(["theme"])),created:function(){},mounted:function(){},methods:{}},a=d,l=(n("e8a7f"),n("2877")),u=Object(l["a"])(a,r,c,!1,null,"58cf81c7",null);t["default"]=u.exports},e8a7f:function(e,t,n){"use strict";n("0788")}}]);