(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-7c16a3b0"],{"0ca1":function(e,n,t){"use strict";t.r(n);var s=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"content",class:{contentTheme:e.theme}},[t("div",{staticClass:"synopsis"},[e._v("简介")]),t("div",{staticClass:"synopsisBox"},[e._v(" 最新的状态管理工具 提供了更简单的API （去掉了 mutation） 提供符合组合式风格的API（和V3 新语法统一） 每一个store都是一个独立的模块 更好的配合TS ")]),t("div",{staticClass:"br"}),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("1. 下包")]),e._m(0),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("2. main.js配置")]),e._m(1),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("3. 创建 store / user.js")]),e._m(2),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("4. vue中使用")]),e._m(3),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("5. storeToRefs 响应式")]),e._m(4),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("6. 持久化工具")]),e._m(5),t("h3",{staticStyle:{margin:"20px 0"}},[e._v("7. F12控制台显示pinia数据")]),e._m(6)])},r=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      npm install pinia\n    ")]),e._v("\n  ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      import { createPinia } from 'pinia'\n      app.use(createPinia())\n    ")]),e._v("\n  ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      import { defineStore } from 'pinia'\n      import { ref } from 'vue'\n\n      // defineStore('仓库唯一标识'，函数)\n      export const userStore = defineStore('user',()=>{\n        // 声明数据\n        const name = ref('小明')\n\n        // 声明操作数据的方法 action\n        const changeUser = () => {\n          name = '小李'\n        }\n\n        // 声明基于数据生成的计算属性 getters\n        const userName = computed(() => name)\n\n        // 将数据或方法 return出去\n        return {\n          name,\n          changeUser,\n          userName\n        }\n      })\n    ")]),e._v("\n  ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      import { userStore } from '@/store/user.js'\n      const userState = userStore()\n      // 打印store里return出来的测试\n      console.log(userState.name)\n      console.log(userState.userName)\n\n      // 调用store里return出来的函数\n      userState.changeUser()\n    ")]),e._v("\n  ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      / * 如果在页面解构store里return出来的数据 会丢失响应式，用上  storeToRefs 这个就不会    * /\n      import { userStore } from '@/store/user.js'\n      import { storeToRefs } from 'pinia'\n      // 这样使用会丢失响应式\n      const { name } = userState\n      // storeToRefs()没问题\n      const { name } = storeToRefs(userState)\n    ")]),e._v("\n  ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v("\n      / * 1. npm下载包  * /\n      npm i pinia-plugin-persistedstate\n\n      / * 2. main.js  * /\n      import { createPinia } from 'pinia'\n      import piniaPluginPersistedstate from 'pinia-plugin-persistedstate'\n      const pinia = createPinia()\n      pinia.use(piniaPluginPersistedstate)\n      app.use(pinia)\n\n      / * 3. store / user.js 基础持久化方式 * /\n      import { defineStore } from 'pinia'\n      export const userStore = defineStore('user',()=>{\n        // 将数据或方法 return出去\n        return { }\n      },\n      {\n        persist: true  // 这里设为true将使用默认持久化配置保存\n      }\n      )\n\n      / * 3. store / user.js 高级持久化方式 * /\n      import { defineStore } from 'pinia'\n      export const userStore = defineStore('user',()=>{\n        // 将数据或方法 return出去\n        return { }\n      },\n      {\n        persist: {\n          key: 'piniaStore', //存储名称\n          storage: sessionStorage, // 存储方式\n          paths: ['username', 'like','obj']  //指定 state 中哪些数据需要被持久化。[] 表示不持久化任何状态\n        }\n      }\n      )\n    ")]),e._v("\n  ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",{staticClass:"pre"},[e._v("    "),t("code",{staticClass:"code"},[e._v('\n\n      / *  main.js 需要连写  * /\n      app.use(createPinia()).mount("#app")\n    ')]),e._v("\n  ")])}],a=t("5530"),i=t("2f62"),o={components:{},data:function(){return{}},computed:Object(a["a"])({},Object(i["b"])(["theme"])),created:function(){},mounted:function(){},methods:{}},c=o,u=(t("4a49"),t("2877")),p=Object(u["a"])(c,s,r,!1,null,"59086137",null);n["default"]=p.exports},"4a49":function(e,n,t){"use strict";t("8073")},8073:function(e,n,t){}}]);